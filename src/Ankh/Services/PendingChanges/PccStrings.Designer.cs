//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ankh.Services.PendingChanges {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class PccStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PccStrings() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ankh.Services.PendingChanges.PccStrings", typeof(PccStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Adding files to Subversion.
        /// </summary>
        internal static string AddingTitle {
            get {
                return ResourceManager.GetString("AddingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu The commit processing can&apos;t commit &apos;{0}&apos;, because it is not managed by Subversion. Maybe you should refresh the status after applying changes with another client?.
        /// </summary>
        internal static string CantCommitUnversionedTargetX {
            get {
                return ResourceManager.GetString("CantCommitUnversionedTargetX", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Commit Failed.
        /// </summary>
        internal static string CommitFailedCaption {
            get {
                return ResourceManager.GetString("CommitFailedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu You can only commit to one repository at a time.
        /// </summary>
        internal static string CommitSingleWc {
            get {
                return ResourceManager.GetString("CommitSingleWc", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Committed:.
        /// </summary>
        internal static string CommittedPrefix {
            get {
                return ResourceManager.GetString("CommittedPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Committing.
        /// </summary>
        internal static string CommitTitle {
            get {
                return ResourceManager.GetString("CommitTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Diffing.
        /// </summary>
        internal static string DiffTitle {
            get {
                return ResourceManager.GetString("DiffTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Directory deletes must be recursive and this would commit other files:.
        /// </summary>
        internal static string DirectoryDeleteAndNodeToKeep {
            get {
                return ResourceManager.GetString("DirectoryDeleteAndNodeToKeep", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Deleted directory: {0}.
        /// </summary>
        internal static string DirectoryDeleteX {
            get {
                return ResourceManager.GetString("DirectoryDeleteX", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Directory to commit: {0}.
        /// </summary>
        internal static string DirectoryToCommit {
            get {
                return ResourceManager.GetString("DirectoryToCommit", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Failed to save open documents before committing.
        /// </summary>
        internal static string FailedToSaveBeforeCommit {
            get {
                return ResourceManager.GetString("FailedToSaveBeforeCommit", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Subversion does not allow to commit this combination of files and directories at once..
        /// </summary>
        internal static string InvalidCommitCombination {
            get {
                return ResourceManager.GetString("InvalidCommitCombination", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu You haven&apos;t entered an issue number.
        ///Are you sure you want to commit without an issue number?.
        /// </summary>
        internal static string NoIssueNumber {
            get {
                return ResourceManager.GetString("NoIssueNumber", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu You are trying to commit conflicted items. Please review the conflicted files and resolve them, or remove the check when retrying the commit..
        /// </summary>
        internal static string OneOrMoreItemsConflicted {
            get {
                return ResourceManager.GetString("OneOrMoreItemsConflicted", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Please update the out of date items and then retry the commit..
        /// </summary>
        internal static string OutOfDateCaption {
            get {
                return ResourceManager.GetString("OutOfDateCaption", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Repository Post-Commit hook Result.
        /// </summary>
        internal static string PostCommitError {
            get {
                return ResourceManager.GetString("PostCommitError", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Not to commit: {0}.
        /// </summary>
        internal static string ShouldNotCommitX {
            get {
                return ResourceManager.GetString("ShouldNotCommitX", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu While committing: {0}.
        /// </summary>
        internal static string WhileCommittingX {
            get {
                return ResourceManager.GetString("WhileCommittingX", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Working Copy: {0} (from repository {1}).
        /// </summary>
        internal static string WorkingCopyXFromRepositoryY {
            get {
                return ResourceManager.GetString("WorkingCopyXFromRepositoryY", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu You can download the latest AnkhSVN release on http://ankhsvn.net/downloads.
        /// </summary>
        internal static string YouCanDownloadAnkh {
            get {
                return ResourceManager.GetString("YouCanDownloadAnkh", resourceCulture);
            }
        }
    }
}
