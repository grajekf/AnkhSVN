//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ankh.Scc {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class PendingChangeText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PendingChangeText() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ankh.Scc.PendingChangeText", typeof(PendingChangeText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Added.
        /// </summary>
        internal static string StateAdded {
            get {
                return ResourceManager.GetString("StateAdded", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Conflicted.
        /// </summary>
        internal static string StateConflicted {
            get {
                return ResourceManager.GetString("StateConflicted", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Copied.
        /// </summary>
        internal static string StateCopied {
            get {
                return ResourceManager.GetString("StateCopied", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Deleted.
        /// </summary>
        internal static string StateDeleted {
            get {
                return ResourceManager.GetString("StateDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Edited.
        /// </summary>
        internal static string StateEdited {
            get {
                return ResourceManager.GetString("StateEdited", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ignored.
        /// </summary>
        internal static string StateIgnored {
            get {
                return ResourceManager.GetString("StateIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Incomplete.
        /// </summary>
        internal static string StateIncomplete {
            get {
                return ResourceManager.GetString("StateIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Locked.
        /// </summary>
        internal static string StateLocked {
            get {
                return ResourceManager.GetString("StateLocked", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Missing.
        /// </summary>
        internal static string StateMissing {
            get {
                return ResourceManager.GetString("StateMissing", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Modified.
        /// </summary>
        internal static string StateModified {
            get {
                return ResourceManager.GetString("StateModified", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Copied and Modified.
        /// </summary>
        internal static string StateModifiedCopy {
            get {
                return ResourceManager.GetString("StateModifiedCopy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Moved and Modified.
        /// </summary>
        internal static string StateModifiedMove {
            get {
                return ResourceManager.GetString("StateModifiedMove", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Moved.
        /// </summary>
        internal static string StateMoved {
            get {
                return ResourceManager.GetString("StateMoved", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu New.
        /// </summary>
        internal static string StateNew {
            get {
                return ResourceManager.GetString("StateNew", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu New over Deleted.
        /// </summary>
        internal static string StateNewOverDeleted {
            get {
                return ResourceManager.GetString("StateNewOverDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Properties Modified.
        /// </summary>
        internal static string StatePropertyModified {
            get {
                return ResourceManager.GetString("StatePropertyModified", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Replaced.
        /// </summary>
        internal static string StateReplaced {
            get {
                return ResourceManager.GetString("StateReplaced", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Tree Conflict.
        /// </summary>
        internal static string StateTreeConflicted {
            get {
                return ResourceManager.GetString("StateTreeConflicted", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Casing Conflict.
        /// </summary>
        internal static string StateWrongCasing {
            get {
                return ResourceManager.GetString("StateWrongCasing", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Updating Pending Changes.
        /// </summary>
        internal static string WaitCaption {
            get {
                return ResourceManager.GetString("WaitCaption", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Checking Subversion status of your Working Copy..
        /// </summary>
        internal static string WaitMessage {
            get {
                return ResourceManager.GetString("WaitMessage", resourceCulture);
            }
        }
    }
}
