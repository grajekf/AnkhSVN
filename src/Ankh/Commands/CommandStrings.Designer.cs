//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ankh.Commands {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CommandStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CommandStrings() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ankh.Commands.CommandStrings", typeof(CommandStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Select Items to Add.
        /// </summary>
        internal static string AddDialogTitle {
            get {
                return ResourceManager.GetString("AddDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Add Project from Subversion.
        /// </summary>
        internal static string AddProjectFromSubversion {
            get {
                return ResourceManager.GetString("AddProjectFromSubversion", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Would you like to add &apos;{0}&apos; to Subversion and mark it as managed?.
        /// </summary>
        internal static string AddSolutionXToSubversion {
            get {
                return ResourceManager.GetString("AddSolutionXToSubversion", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Adding files.
        /// </summary>
        internal static string AddTaskDialogTitle {
            get {
                return ResourceManager.GetString("AddTaskDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Would you like to add&apos;{0}&apos; to existing working copy &apos;{1}&apos;? 
        ///Click Yes to add to the current working copy, and no to create a new working copy..
        /// </summary>
        internal static string AddXToExistingWcY {
            get {
                return ResourceManager.GetString("AddXToExistingWcY", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu You are trying to annotate a binary file. Are you sure you want to continue?.
        /// </summary>
        internal static string AnnotateBinaryFileContinueAnywayText {
            get {
                return ResourceManager.GetString("AnnotateBinaryFileContinueAnywayText", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Binary file detected.
        /// </summary>
        internal static string AnnotateBinaryFileContinueAnywayTitle {
            get {
                return ResourceManager.GetString("AnnotateBinaryFileContinueAnywayTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Annotating.
        /// </summary>
        internal static string Annotating {
            get {
                return ResourceManager.GetString("Annotating", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Branch Project.
        /// </summary>
        internal static string BranchProject {
            get {
                return ResourceManager.GetString("BranchProject", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu You can&apos;t update directories non recursively without the possibility of loosing files in your working copy. Would you like to update recursively?.
        /// </summary>
        internal static string CantUpdateDirectoriesNonRecursive {
            get {
                return ResourceManager.GetString("CantUpdateDirectoriesNonRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Checking Out.
        /// </summary>
        internal static string CheckingOut {
            get {
                return ResourceManager.GetString("CheckingOut", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Checking out Solution.
        /// </summary>
        internal static string CheckingOutSolution {
            get {
                return ResourceManager.GetString("CheckingOutSolution", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Cleaning Working Copy.
        /// </summary>
        internal static string CleaningWorkingCopy {
            get {
                return ResourceManager.GetString("CleaningWorkingCopy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Compare Files.
        /// </summary>
        internal static string CompareFilesTitle {
            get {
                return ResourceManager.GetString("CompareFilesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Copying.
        /// </summary>
        internal static string Copying {
            get {
                return ResourceManager.GetString("Copying", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Create Patch.
        /// </summary>
        internal static string CreatePatchTitle {
            get {
                return ResourceManager.GetString("CreatePatchTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Creating Branch.
        /// </summary>
        internal static string CreatingBranch {
            get {
                return ResourceManager.GetString("CreatingBranch", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Creating Directories.
        /// </summary>
        internal static string CreatingDirectories {
            get {
                return ResourceManager.GetString("CreatingDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Deleting.
        /// </summary>
        internal static string Deleting {
            get {
                return ResourceManager.GetString("Deleting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Edit Conflict.
        /// </summary>
        internal static string EditConflictTitle {
            get {
                return ResourceManager.GetString("EditConflictTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Exporting.
        /// </summary>
        internal static string Exporting {
            get {
                return ResourceManager.GetString("Exporting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu  and .
        /// </summary>
        internal static string FileAnd {
            get {
                return ResourceManager.GetString("FileAnd", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ignore in Subversion.
        /// </summary>
        internal static string IgnoreCaption {
            get {
                return ResourceManager.GetString("IgnoreCaption", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ignore &amp;File ({0}).
        /// </summary>
        internal static string IgnoreFile {
            get {
                return ResourceManager.GetString("IgnoreFile", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ignore File&amp;type (*{0}).
        /// </summary>
        internal static string IgnoreFileType {
            get {
                return ResourceManager.GetString("IgnoreFileType", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ignore Folder ({0}).
        /// </summary>
        internal static string IgnoreFolder {
            get {
                return ResourceManager.GetString("IgnoreFolder", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Importing.
        /// </summary>
        internal static string ImportingTitle {
            get {
                return ResourceManager.GetString("ImportingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu {0} (locked by &apos;{1}&apos;).
        /// </summary>
        internal static string ItemFileLocked {
            get {
                return ResourceManager.GetString("ItemFileLocked", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu The following items could not be locked, because they were already locked. Do you want to try to steal the locks on these files?.
        /// </summary>
        internal static string ItemsAlreadyLocked {
            get {
                return ResourceManager.GetString("ItemsAlreadyLocked", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Locking.
        /// </summary>
        internal static string LockingTitle {
            get {
                return ResourceManager.GetString("LockingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Would you like to mark &apos;{0}&apos; as managed by Subversion?.
        /// </summary>
        internal static string MarkXAsManaged {
            get {
                return ResourceManager.GetString("MarkXAsManaged", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Moving.
        /// </summary>
        internal static string Moving {
            get {
                return ResourceManager.GetString("Moving", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu The specified path is not in a working copy; would you like to export the file instead?.
        /// </summary>
        internal static string NotInWorkingCopyExportInstead {
            get {
                return ResourceManager.GetString("NotInWorkingCopyExportInstead", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu No Working Copy.
        /// </summary>
        internal static string NotInWorkingCopyTitle {
            get {
                return ResourceManager.GetString("NotInWorkingCopyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Reading Properties.
        /// </summary>
        internal static string ReadingProperties {
            get {
                return ResourceManager.GetString("ReadingProperties", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Relocating.
        /// </summary>
        internal static string RelocatingTitle {
            get {
                return ResourceManager.GetString("RelocatingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Renaming.
        /// </summary>
        internal static string RenamingNodes {
            get {
                return ResourceManager.GetString("RenamingNodes", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Retrieving Conflict Details.
        /// </summary>
        internal static string RetrievingConflictDetails {
            get {
                return ResourceManager.GetString("RetrievingConflictDetails", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Retrieving File for Comparison.
        /// </summary>
        internal static string RetrievingFileForComparison {
            get {
                return ResourceManager.GetString("RetrievingFileForComparison", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Retrieving Repository Root.
        /// </summary>
        internal static string RetrievingRepositoryRoot {
            get {
                return ResourceManager.GetString("RetrievingRepositoryRoot", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Select Items to Revert.
        /// </summary>
        internal static string RevertDialogTitle {
            get {
                return ResourceManager.GetString("RevertDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Reverting.
        /// </summary>
        internal static string Reverting {
            get {
                return ResourceManager.GetString("Reverting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Comparing Files.
        /// </summary>
        internal static string RunningDiff {
            get {
                return ResourceManager.GetString("RunningDiff", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Storing Property Values.
        /// </summary>
        internal static string StoringPropertyValues {
            get {
                return ResourceManager.GetString("StoringPropertyValues", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Switching.
        /// </summary>
        internal static string SwitchingTitle {
            get {
                return ResourceManager.GetString("SwitchingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu The conflict in &apos;{0}&apos; is already resolved..
        /// </summary>
        internal static string TheConflictInXIsAlreadyResolved {
            get {
                return ResourceManager.GetString("TheConflictInXIsAlreadyResolved", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu The selected items will be deleted permanently..
        /// </summary>
        internal static string TheSelectedItemsWillBeDeletedPermanently {
            get {
                return ResourceManager.GetString("TheSelectedItemsWillBeDeletedPermanently", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Unified Diff.
        /// </summary>
        internal static string UnifiedDiffTitle {
            get {
                return ResourceManager.GetString("UnifiedDiffTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Unlock Files.
        /// </summary>
        internal static string UnlockTitle {
            get {
                return ResourceManager.GetString("UnlockTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Updated to:.
        /// </summary>
        internal static string UpdatedToTitle {
            get {
                return ResourceManager.GetString("UpdatedToTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Update Files.
        /// </summary>
        internal static string UpdateFilesTitle {
            get {
                return ResourceManager.GetString("UpdateFilesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Update Folder.
        /// </summary>
        internal static string UpdateFolder {
            get {
                return ResourceManager.GetString("UpdateFolder", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu &amp;Folder:.
        /// </summary>
        internal static string UpdateFolderLabel {
            get {
                return ResourceManager.GetString("UpdateFolderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Update Project.
        /// </summary>
        internal static string UpdateProject {
            get {
                return ResourceManager.GetString("UpdateProject", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Updating Folder.
        /// </summary>
        internal static string UpdatingFolder {
            get {
                return ResourceManager.GetString("UpdatingFolder", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Updating Project.
        /// </summary>
        internal static string UpdatingProject {
            get {
                return ResourceManager.GetString("UpdatingProject", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Updating Solution.
        /// </summary>
        internal static string UpdatingSolution {
            get {
                return ResourceManager.GetString("UpdatingSolution", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Updating.
        /// </summary>
        internal static string UpdatingTitle {
            get {
                return ResourceManager.GetString("UpdatingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Upgrading Working Copy.
        /// </summary>
        internal static string UpgradingWorkingCopy {
            get {
                return ResourceManager.GetString("UpgradingWorkingCopy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Would you like to add {0} to the svn:ignore property on &apos;{1}&apos;?.
        /// </summary>
        internal static string WouldYouLikeToAddXToTheIgnorePropertyOnY {
            get {
                return ResourceManager.GetString("WouldYouLikeToAddXToTheIgnorePropertyOnY", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu &apos;{0}&apos; will be deleted permanently..
        /// </summary>
        internal static string XWillBeDeletedPermanently {
            get {
                return ResourceManager.GetString("XWillBeDeletedPermanently", resourceCulture);
            }
        }
    }
}
